#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '../../soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_MEMORY2_0_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define ONCHIP_MEMORY2_0_BASE 0x0
#define ONCHIP_MEMORY2_0_SPAN 16384
#define ONCHIP_MEMORY2_0_END 0x3fff
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 16384
#define ONCHIP_MEMORY2_0_WRITABLE 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x1000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x1007
#define SYSID_QSYS_ID 2899645442
#define SYSID_QSYS_TIMESTAMP 1436531320

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * The macros are prefixed with 'INTR_CAPTURER_0_'.
 * The prefix is the slave descriptor.
 */
#define INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define INTR_CAPTURER_0_BASE 0x6000
#define INTR_CAPTURER_0_SPAN 8
#define INTR_CAPTURER_0_END 0x6007

/*
 * Macros for device 'validator_subsys_0', class 'validator_subsys'
 * The macros are prefixed with 'VALIDATOR_SUBSYS_0_'.
 * The prefix is the slave descriptor.
 */
#define VALIDATOR_SUBSYS_0_COMPONENT_TYPE validator_subsys
#define VALIDATOR_SUBSYS_0_COMPONENT_NAME validator_subsys_0
#define VALIDATOR_SUBSYS_0_BASE 0x10000
#define VALIDATOR_SUBSYS_0_SPAN 1024
#define VALIDATOR_SUBSYS_0_END 0x103ff

/*
 * Macros for device 'memcpy_msgdma_csr', class 'altera_msgdma'
 * The macros are prefixed with 'MEMCPY_MSGDMA_CSR_'.
 * The prefix is the slave descriptor.
 */
#define MEMCPY_MSGDMA_CSR_COMPONENT_TYPE altera_msgdma
#define MEMCPY_MSGDMA_CSR_COMPONENT_NAME memcpy_msgdma
#define MEMCPY_MSGDMA_CSR_BASE 0x20000
#define MEMCPY_MSGDMA_CSR_SPAN 32
#define MEMCPY_MSGDMA_CSR_END 0x2001f
#define MEMCPY_MSGDMA_CSR_IRQ 7
#define MEMCPY_MSGDMA_CSR_BURST_ENABLE 1
#define MEMCPY_MSGDMA_CSR_BURST_WRAPPING_SUPPORT 0
#define MEMCPY_MSGDMA_CSR_CHANNEL_ENABLE 0
#define MEMCPY_MSGDMA_CSR_CHANNEL_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_CSR_CHANNEL_WIDTH 8
#define MEMCPY_MSGDMA_CSR_DATA_FIFO_DEPTH 32
#define MEMCPY_MSGDMA_CSR_DATA_WIDTH 64
#define MEMCPY_MSGDMA_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define MEMCPY_MSGDMA_CSR_DMA_MODE 0
#define MEMCPY_MSGDMA_CSR_ENHANCED_FEATURES 0
#define MEMCPY_MSGDMA_CSR_ERROR_ENABLE 0
#define MEMCPY_MSGDMA_CSR_ERROR_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_CSR_ERROR_WIDTH 8
#define MEMCPY_MSGDMA_CSR_MAX_BURST_COUNT 8
#define MEMCPY_MSGDMA_CSR_MAX_BYTE 1024
#define MEMCPY_MSGDMA_CSR_MAX_STRIDE 1
#define MEMCPY_MSGDMA_CSR_PACKET_ENABLE 0
#define MEMCPY_MSGDMA_CSR_PACKET_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define MEMCPY_MSGDMA_CSR_RESPONSE_PORT 2
#define MEMCPY_MSGDMA_CSR_STRIDE_ENABLE 0
#define MEMCPY_MSGDMA_CSR_STRIDE_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_CSR_TRANSFER_TYPE Unaligned Accesses

/*
 * Macros for device 'memcpy_msgdma_descriptor_slave', class 'altera_msgdma'
 * The macros are prefixed with 'MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_COMPONENT_NAME memcpy_msgdma
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_BASE 0x20020
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_SPAN 16
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_END 0x2002f
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_DATA_WIDTH 64
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_DMA_MODE 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 8
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_MAX_BYTE 1024
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define MEMCPY_MSGDMA_DESCRIPTOR_SLAVE_TRANSFER_TYPE Unaligned Accesses

/*
 * Macros for device 'demo_driver_subsys_0', class 'demo_driver_subsys'
 * The macros are prefixed with 'DEMO_DRIVER_SUBSYS_0_'.
 * The prefix is the slave descriptor.
 */
#define DEMO_DRIVER_SUBSYS_0_COMPONENT_TYPE demo_driver_subsys
#define DEMO_DRIVER_SUBSYS_0_COMPONENT_NAME demo_driver_subsys_0
#define DEMO_DRIVER_SUBSYS_0_BASE 0x30000
#define DEMO_DRIVER_SUBSYS_0_SPAN 4096
#define DEMO_DRIVER_SUBSYS_0_END 0x30fff
#define DEMO_DRIVER_SUBSYS_0_IRQ 8

/*
 * Macros for device 'fifo_0_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_0_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_0_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_0_IN_CSR_COMPONENT_NAME fifo_0
#define FIFO_0_IN_CSR_BASE 0x40000
#define FIFO_0_IN_CSR_SPAN 32
#define FIFO_0_IN_CSR_END 0x4001f
#define FIFO_0_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_0_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_0_IN_CSR_BITS_PER_SYMBOL 16
#define FIFO_0_IN_CSR_CHANNEL_WIDTH 8
#define FIFO_0_IN_CSR_ERROR_WIDTH 8
#define FIFO_0_IN_CSR_FIFO_DEPTH 256
#define FIFO_0_IN_CSR_SINGLE_CLOCK_MODE 1
#define FIFO_0_IN_CSR_SYMBOLS_PER_BEAT 2
#define FIFO_0_IN_CSR_USE_AVALONMM_READ_SLAVE 1
#define FIFO_0_IN_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_0_IN_CSR_USE_AVALONST_SINK 0
#define FIFO_0_IN_CSR_USE_AVALONST_SOURCE 0
#define FIFO_0_IN_CSR_USE_BACKPRESSURE 1
#define FIFO_0_IN_CSR_USE_IRQ 0
#define FIFO_0_IN_CSR_USE_PACKET 1
#define FIFO_0_IN_CSR_USE_READ_CONTROL 0
#define FIFO_0_IN_CSR_USE_REGISTER 0
#define FIFO_0_IN_CSR_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_0_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_0_IN_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_0_IN_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_0_IN_COMPONENT_NAME fifo_0
#define FIFO_0_IN_BASE 0x40020
#define FIFO_0_IN_SPAN 4
#define FIFO_0_IN_END 0x40023
#define FIFO_0_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_0_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_0_IN_BITS_PER_SYMBOL 16
#define FIFO_0_IN_CHANNEL_WIDTH 8
#define FIFO_0_IN_ERROR_WIDTH 8
#define FIFO_0_IN_FIFO_DEPTH 256
#define FIFO_0_IN_SINGLE_CLOCK_MODE 1
#define FIFO_0_IN_SYMBOLS_PER_BEAT 2
#define FIFO_0_IN_USE_AVALONMM_READ_SLAVE 1
#define FIFO_0_IN_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_0_IN_USE_AVALONST_SINK 0
#define FIFO_0_IN_USE_AVALONST_SOURCE 0
#define FIFO_0_IN_USE_BACKPRESSURE 1
#define FIFO_0_IN_USE_IRQ 0
#define FIFO_0_IN_USE_PACKET 1
#define FIFO_0_IN_USE_READ_CONTROL 0
#define FIFO_0_IN_USE_REGISTER 0
#define FIFO_0_IN_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_0_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_0_OUT_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_0_OUT_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_0_OUT_COMPONENT_NAME fifo_0
#define FIFO_0_OUT_BASE 0x40030
#define FIFO_0_OUT_SPAN 4
#define FIFO_0_OUT_END 0x40033
#define FIFO_0_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_0_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_0_OUT_BITS_PER_SYMBOL 16
#define FIFO_0_OUT_CHANNEL_WIDTH 8
#define FIFO_0_OUT_ERROR_WIDTH 8
#define FIFO_0_OUT_FIFO_DEPTH 256
#define FIFO_0_OUT_SINGLE_CLOCK_MODE 1
#define FIFO_0_OUT_SYMBOLS_PER_BEAT 2
#define FIFO_0_OUT_USE_AVALONMM_READ_SLAVE 1
#define FIFO_0_OUT_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_0_OUT_USE_AVALONST_SINK 0
#define FIFO_0_OUT_USE_AVALONST_SOURCE 0
#define FIFO_0_OUT_USE_BACKPRESSURE 1
#define FIFO_0_OUT_USE_IRQ 0
#define FIFO_0_OUT_USE_PACKET 1
#define FIFO_0_OUT_USE_READ_CONTROL 0
#define FIFO_0_OUT_USE_REGISTER 0
#define FIFO_0_OUT_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_1_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_1_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_1_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_1_IN_CSR_COMPONENT_NAME fifo_1
#define FIFO_1_IN_CSR_BASE 0x44000
#define FIFO_1_IN_CSR_SPAN 32
#define FIFO_1_IN_CSR_END 0x4401f
#define FIFO_1_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_1_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_1_IN_CSR_BITS_PER_SYMBOL 16
#define FIFO_1_IN_CSR_CHANNEL_WIDTH 8
#define FIFO_1_IN_CSR_ERROR_WIDTH 8
#define FIFO_1_IN_CSR_FIFO_DEPTH 256
#define FIFO_1_IN_CSR_SINGLE_CLOCK_MODE 1
#define FIFO_1_IN_CSR_SYMBOLS_PER_BEAT 2
#define FIFO_1_IN_CSR_USE_AVALONMM_READ_SLAVE 1
#define FIFO_1_IN_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_1_IN_CSR_USE_AVALONST_SINK 0
#define FIFO_1_IN_CSR_USE_AVALONST_SOURCE 0
#define FIFO_1_IN_CSR_USE_BACKPRESSURE 1
#define FIFO_1_IN_CSR_USE_IRQ 0
#define FIFO_1_IN_CSR_USE_PACKET 1
#define FIFO_1_IN_CSR_USE_READ_CONTROL 0
#define FIFO_1_IN_CSR_USE_REGISTER 0
#define FIFO_1_IN_CSR_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_1_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_1_IN_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_1_IN_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_1_IN_COMPONENT_NAME fifo_1
#define FIFO_1_IN_BASE 0x44020
#define FIFO_1_IN_SPAN 4
#define FIFO_1_IN_END 0x44023
#define FIFO_1_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_1_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_1_IN_BITS_PER_SYMBOL 16
#define FIFO_1_IN_CHANNEL_WIDTH 8
#define FIFO_1_IN_ERROR_WIDTH 8
#define FIFO_1_IN_FIFO_DEPTH 256
#define FIFO_1_IN_SINGLE_CLOCK_MODE 1
#define FIFO_1_IN_SYMBOLS_PER_BEAT 2
#define FIFO_1_IN_USE_AVALONMM_READ_SLAVE 1
#define FIFO_1_IN_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_1_IN_USE_AVALONST_SINK 0
#define FIFO_1_IN_USE_AVALONST_SOURCE 0
#define FIFO_1_IN_USE_BACKPRESSURE 1
#define FIFO_1_IN_USE_IRQ 0
#define FIFO_1_IN_USE_PACKET 1
#define FIFO_1_IN_USE_READ_CONTROL 0
#define FIFO_1_IN_USE_REGISTER 0
#define FIFO_1_IN_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_1_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_1_OUT_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_1_OUT_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_1_OUT_COMPONENT_NAME fifo_1
#define FIFO_1_OUT_BASE 0x44030
#define FIFO_1_OUT_SPAN 4
#define FIFO_1_OUT_END 0x44033
#define FIFO_1_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_1_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_1_OUT_BITS_PER_SYMBOL 16
#define FIFO_1_OUT_CHANNEL_WIDTH 8
#define FIFO_1_OUT_ERROR_WIDTH 8
#define FIFO_1_OUT_FIFO_DEPTH 256
#define FIFO_1_OUT_SINGLE_CLOCK_MODE 1
#define FIFO_1_OUT_SYMBOLS_PER_BEAT 2
#define FIFO_1_OUT_USE_AVALONMM_READ_SLAVE 1
#define FIFO_1_OUT_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_1_OUT_USE_AVALONST_SINK 0
#define FIFO_1_OUT_USE_AVALONST_SOURCE 0
#define FIFO_1_OUT_USE_BACKPRESSURE 1
#define FIFO_1_OUT_USE_IRQ 0
#define FIFO_1_OUT_USE_PACKET 1
#define FIFO_1_OUT_USE_READ_CONTROL 0
#define FIFO_1_OUT_USE_REGISTER 0
#define FIFO_1_OUT_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_2_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_2_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_2_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_2_IN_CSR_COMPONENT_NAME fifo_2
#define FIFO_2_IN_CSR_BASE 0x48000
#define FIFO_2_IN_CSR_SPAN 32
#define FIFO_2_IN_CSR_END 0x4801f
#define FIFO_2_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_2_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_2_IN_CSR_BITS_PER_SYMBOL 16
#define FIFO_2_IN_CSR_CHANNEL_WIDTH 8
#define FIFO_2_IN_CSR_ERROR_WIDTH 8
#define FIFO_2_IN_CSR_FIFO_DEPTH 256
#define FIFO_2_IN_CSR_SINGLE_CLOCK_MODE 1
#define FIFO_2_IN_CSR_SYMBOLS_PER_BEAT 2
#define FIFO_2_IN_CSR_USE_AVALONMM_READ_SLAVE 1
#define FIFO_2_IN_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_2_IN_CSR_USE_AVALONST_SINK 0
#define FIFO_2_IN_CSR_USE_AVALONST_SOURCE 0
#define FIFO_2_IN_CSR_USE_BACKPRESSURE 1
#define FIFO_2_IN_CSR_USE_IRQ 0
#define FIFO_2_IN_CSR_USE_PACKET 1
#define FIFO_2_IN_CSR_USE_READ_CONTROL 0
#define FIFO_2_IN_CSR_USE_REGISTER 0
#define FIFO_2_IN_CSR_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_2_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_2_IN_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_2_IN_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_2_IN_COMPONENT_NAME fifo_2
#define FIFO_2_IN_BASE 0x48020
#define FIFO_2_IN_SPAN 4
#define FIFO_2_IN_END 0x48023
#define FIFO_2_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_2_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_2_IN_BITS_PER_SYMBOL 16
#define FIFO_2_IN_CHANNEL_WIDTH 8
#define FIFO_2_IN_ERROR_WIDTH 8
#define FIFO_2_IN_FIFO_DEPTH 256
#define FIFO_2_IN_SINGLE_CLOCK_MODE 1
#define FIFO_2_IN_SYMBOLS_PER_BEAT 2
#define FIFO_2_IN_USE_AVALONMM_READ_SLAVE 1
#define FIFO_2_IN_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_2_IN_USE_AVALONST_SINK 0
#define FIFO_2_IN_USE_AVALONST_SOURCE 0
#define FIFO_2_IN_USE_BACKPRESSURE 1
#define FIFO_2_IN_USE_IRQ 0
#define FIFO_2_IN_USE_PACKET 1
#define FIFO_2_IN_USE_READ_CONTROL 0
#define FIFO_2_IN_USE_REGISTER 0
#define FIFO_2_IN_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fifo_2_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_2_OUT_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_2_OUT_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_2_OUT_COMPONENT_NAME fifo_2
#define FIFO_2_OUT_BASE 0x48030
#define FIFO_2_OUT_SPAN 4
#define FIFO_2_OUT_END 0x48033
#define FIFO_2_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_2_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_2_OUT_BITS_PER_SYMBOL 16
#define FIFO_2_OUT_CHANNEL_WIDTH 8
#define FIFO_2_OUT_ERROR_WIDTH 8
#define FIFO_2_OUT_FIFO_DEPTH 256
#define FIFO_2_OUT_SINGLE_CLOCK_MODE 1
#define FIFO_2_OUT_SYMBOLS_PER_BEAT 2
#define FIFO_2_OUT_USE_AVALONMM_READ_SLAVE 1
#define FIFO_2_OUT_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_2_OUT_USE_AVALONST_SINK 0
#define FIFO_2_OUT_USE_AVALONST_SOURCE 0
#define FIFO_2_OUT_USE_BACKPRESSURE 1
#define FIFO_2_OUT_USE_IRQ 0
#define FIFO_2_OUT_USE_PACKET 1
#define FIFO_2_OUT_USE_READ_CONTROL 0
#define FIFO_2_OUT_USE_REGISTER 0
#define FIFO_2_OUT_USE_WRITE_CONTROL 1

/*
 * Macros for device 'fft_sub_sgdma_to_fft_csr', class 'altera_msgdma'
 * The macros are prefixed with 'FFT_SUB_SGDMA_TO_FFT_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FFT_SUB_SGDMA_TO_FFT_CSR_COMPONENT_TYPE altera_msgdma
#define FFT_SUB_SGDMA_TO_FFT_CSR_COMPONENT_NAME fft_sub_sgdma_to_fft
#define FFT_SUB_SGDMA_TO_FFT_CSR_BASE 0x80000
#define FFT_SUB_SGDMA_TO_FFT_CSR_SPAN 32
#define FFT_SUB_SGDMA_TO_FFT_CSR_END 0x8001f
#define FFT_SUB_SGDMA_TO_FFT_CSR_IRQ 4
#define FFT_SUB_SGDMA_TO_FFT_CSR_BURST_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_BURST_WRAPPING_SUPPORT 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_CHANNEL_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_CHANNEL_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_CHANNEL_WIDTH 8
#define FFT_SUB_SGDMA_TO_FFT_CSR_DATA_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_TO_FFT_CSR_DATA_WIDTH 32
#define FFT_SUB_SGDMA_TO_FFT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_TO_FFT_CSR_DMA_MODE 1
#define FFT_SUB_SGDMA_TO_FFT_CSR_ENHANCED_FEATURES 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_ERROR_ENABLE 1
#define FFT_SUB_SGDMA_TO_FFT_CSR_ERROR_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_TO_FFT_CSR_ERROR_WIDTH 2
#define FFT_SUB_SGDMA_TO_FFT_CSR_MAX_BURST_COUNT 2
#define FFT_SUB_SGDMA_TO_FFT_CSR_MAX_BYTE 131072
#define FFT_SUB_SGDMA_TO_FFT_CSR_MAX_STRIDE 1
#define FFT_SUB_SGDMA_TO_FFT_CSR_PACKET_ENABLE 1
#define FFT_SUB_SGDMA_TO_FFT_CSR_PACKET_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_TO_FFT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_RESPONSE_PORT 2
#define FFT_SUB_SGDMA_TO_FFT_CSR_STRIDE_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_STRIDE_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_TO_FFT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'fft_sub_sgdma_to_fft_descriptor_slave', class 'altera_msgdma'
 * The macros are prefixed with 'FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_COMPONENT_NAME fft_sub_sgdma_to_fft
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_BASE 0x90000
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_SPAN 16
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_END 0x9000f
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_DMA_MODE 1
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_ERROR_ENABLE 1
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_ERROR_WIDTH 2
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_MAX_BYTE 131072
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_PACKET_ENABLE 1
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_TO_FFT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'fft_sub_sgdma_from_fft_csr', class 'altera_msgdma'
 * The macros are prefixed with 'FFT_SUB_SGDMA_FROM_FFT_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FFT_SUB_SGDMA_FROM_FFT_CSR_COMPONENT_TYPE altera_msgdma
#define FFT_SUB_SGDMA_FROM_FFT_CSR_COMPONENT_NAME fft_sub_sgdma_from_fft
#define FFT_SUB_SGDMA_FROM_FFT_CSR_BASE 0xa0000
#define FFT_SUB_SGDMA_FROM_FFT_CSR_SPAN 32
#define FFT_SUB_SGDMA_FROM_FFT_CSR_END 0xa001f
#define FFT_SUB_SGDMA_FROM_FFT_CSR_IRQ 3
#define FFT_SUB_SGDMA_FROM_FFT_CSR_BURST_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_BURST_WRAPPING_SUPPORT 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_CHANNEL_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_CHANNEL_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_CHANNEL_WIDTH 8
#define FFT_SUB_SGDMA_FROM_FFT_CSR_DATA_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_FROM_FFT_CSR_DATA_WIDTH 64
#define FFT_SUB_SGDMA_FROM_FFT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_FROM_FFT_CSR_DMA_MODE 2
#define FFT_SUB_SGDMA_FROM_FFT_CSR_ENHANCED_FEATURES 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_ERROR_ENABLE 1
#define FFT_SUB_SGDMA_FROM_FFT_CSR_ERROR_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_FROM_FFT_CSR_ERROR_WIDTH 2
#define FFT_SUB_SGDMA_FROM_FFT_CSR_MAX_BURST_COUNT 2
#define FFT_SUB_SGDMA_FROM_FFT_CSR_MAX_BYTE 131072
#define FFT_SUB_SGDMA_FROM_FFT_CSR_MAX_STRIDE 1
#define FFT_SUB_SGDMA_FROM_FFT_CSR_PACKET_ENABLE 1
#define FFT_SUB_SGDMA_FROM_FFT_CSR_PACKET_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_FROM_FFT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_RESPONSE_PORT 2
#define FFT_SUB_SGDMA_FROM_FFT_CSR_STRIDE_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_STRIDE_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_FROM_FFT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'fft_sub_sgdma_from_fft_descriptor_slave', class 'altera_msgdma'
 * The macros are prefixed with 'FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_'.
 * The prefix is the slave descriptor.
 */
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_COMPONENT_NAME fft_sub_sgdma_from_fft
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_BASE 0xb0000
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_SPAN 16
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_END 0xb000f
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_DATA_WIDTH 64
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_ERROR_ENABLE 1
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_ERROR_WIDTH 2
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_MAX_BYTE 131072
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_PACKET_ENABLE 1
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 1
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define FFT_SUB_SGDMA_FROM_FFT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'fft_sub_data', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'FFT_SUB_DATA_'.
 * The prefix is the slave descriptor.
 */
#define FFT_SUB_DATA_COMPONENT_TYPE altera_avalon_onchip_memory2
#define FFT_SUB_DATA_COMPONENT_NAME fft_sub_data
#define FFT_SUB_DATA_BASE 0xc0000
#define FFT_SUB_DATA_SPAN 65536
#define FFT_SUB_DATA_END 0xcffff
#define FFT_SUB_DATA_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FFT_SUB_DATA_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FFT_SUB_DATA_CONTENTS_INFO ""
#define FFT_SUB_DATA_DUAL_PORT 0
#define FFT_SUB_DATA_GUI_RAM_BLOCK_TYPE AUTO
#define FFT_SUB_DATA_INIT_CONTENTS_FILE soc_system_fft_sub_data
#define FFT_SUB_DATA_INIT_MEM_CONTENT 1
#define FFT_SUB_DATA_INSTANCE_ID NONE
#define FFT_SUB_DATA_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FFT_SUB_DATA_RAM_BLOCK_TYPE AUTO
#define FFT_SUB_DATA_READ_DURING_WRITE_MODE DONT_CARE
#define FFT_SUB_DATA_SINGLE_CLOCK_OP 0
#define FFT_SUB_DATA_SIZE_MULTIPLE 1
#define FFT_SUB_DATA_SIZE_VALUE 65536
#define FFT_SUB_DATA_WRITABLE 1
#define FFT_SUB_DATA_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define FFT_SUB_DATA_MEMORY_INFO_GENERATE_DAT_SYM 1
#define FFT_SUB_DATA_MEMORY_INFO_GENERATE_HEX 1
#define FFT_SUB_DATA_MEMORY_INFO_HAS_BYTE_LANE 0
#define FFT_SUB_DATA_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define FFT_SUB_DATA_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define FFT_SUB_DATA_MEMORY_INFO_MEM_INIT_FILENAME soc_system_fft_sub_data

/*
 * Macros for device 'fft_sub_FFT_STadapter_0', class 'FFT_STadapter'
 * The macros are prefixed with 'FFT_SUB_FFT_STADAPTER_0_'.
 * The prefix is the slave descriptor.
 */
#define FFT_SUB_FFT_STADAPTER_0_COMPONENT_TYPE FFT_STadapter
#define FFT_SUB_FFT_STADAPTER_0_COMPONENT_NAME fft_sub_FFT_STadapter_0
#define FFT_SUB_FFT_STADAPTER_0_BASE 0xd0000
#define FFT_SUB_FFT_STADAPTER_0_SPAN 16
#define FFT_SUB_FFT_STADAPTER_0_END 0xd000f


#endif /* _ALTERA_HPS_0_H_ */
